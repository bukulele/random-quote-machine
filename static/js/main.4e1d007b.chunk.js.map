{"version":3,"sources":["button.js","buttons-block.js","text-box.js","quote-history.js","quote-box.js","index.js"],"names":["Button","props","useState","opacity","setOpacity","style","id","className","onClick","onMouseEnter","onMouseLeave","title","icon","ahref","ButtonsBlock","quote","author","url","href","target","faTwitter","toggleDisplayHistory","faHistory","loadNewQuote","faChevronCircleRight","TextBox","animationName","color","transition","QuoteHistory","history","quoteHistory","map","element","index","mainColor","display","displayHistory","faTimesCircle","faQuoteLeft","clearHistory","faTrashAlt","QuoteBox","setQuote","setAuthor","quoteStatus","setQuoteStatus","setQuoteHistory","setDisplayHistory","MAINCOLOR","setMainColor","setAnimationName","styleMainColor","backgroundColor","hue","Math","random","useEffect","fetch","then","response","json","result","content","error","console","log","toString","copy","faClone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1d007b.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nfunction Button(props) {\n    const [opacity, setOpacity] = useState(1)\n\n    function onMouseEnter() {\n        setOpacity(0.75)\n    }\n\n    function onMouseLeave() {\n        setOpacity(1)\n    }\n\n    let style = {\n        ...props.style,\n        opacity: opacity,\n    }\n\n    return (\n        <button\n            id={props.id}\n            className={'button ' + props.className}\n            onClick={props.onClick}\n            style={style}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            title={props.title}\n        >\n            <FontAwesomeIcon icon={props.icon} /> {props.ahref}\n        </button>\n    )\n}\n\nexport default Button\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport {\n    faHistory,\n    faChevronCircleRight,\n} from '@fortawesome/free-solid-svg-icons'\nimport Button from './button'\n\nfunction ButtonsBlock(props) {\n    let quote = props.quote\n    let author = props.author\n    let url = `https://twitter.com/intent/tweet?text=\"${quote}\" ${author} %23quotes`\n    let ahref = <a id=\"tweet-quote\" href={url} target=\"_blank\"></a>\n    return (\n        <div className=\"bottom-block\">\n            <Button\n                className=\"button-tweet\"\n                id=\"tweet\"\n                style={props.style}\n                icon={faTwitter}\n                ahref={ahref}\n                title={'TWEET'}\n            />\n\n            <Button\n                id=\"button-history\"\n                className=\"button-history\"\n                onClick={props.toggleDisplayHistory}\n                style={props.style}\n                icon={faHistory}\n                title={'History'}\n            />\n            <Button\n                id=\"new-quote\"\n                className=\"button-new-quote\"\n                onClick={props.loadNewQuote}\n                style={props.style}\n                icon={faChevronCircleRight}\n                title={'New quote'}\n            />\n        </div>\n    )\n}\n\nexport default ButtonsBlock\n","function TextBox(props) {\n    return (\n        <div\n            className=\"text-block\"\n            style={{ animationName: props.animationName }}\n        >\n            <p id=\"text\" style={{ color: props.color, transition: '1s ease' }}>\n                {props.quote}\n            </p>\n            <p\n                id=\"author\"\n                style={{ color: props.color, transition: '1s ease' }}\n            >\n                {'- ' + props.author}\n            </p>\n        </div>\n    )\n}\n\nexport default TextBox\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faTrashAlt,\n    faTimesCircle,\n    faQuoteLeft,\n} from '@fortawesome/free-solid-svg-icons'\nimport Button from './button'\n\nfunction QuoteHistory(props) {\n    let history = props.quoteHistory.map((element, index) => (\n        <li\n            key={element.quote + index}\n            style={{ color: props.mainColor }}\n        >{`${element.quote} ${element.author}`}</li>\n    ))\n    return (\n        <div\n            className=\"quote-history\"\n            style={{ display: props.displayHistory ? 'grid' : 'none' }}\n        >\n            <div className=\"upper-block\">\n                <Button\n                    onClick={props.toggleDisplayHistory}\n                    style={props.style}\n                    icon={faTimesCircle}\n                    title={'Close'}\n                />\n            </div>\n            <div className=\"quote-image\" style={{ color: props.mainColor }}>\n                <FontAwesomeIcon icon={faQuoteLeft} />\n            </div>\n            <div className=\"text-block\">\n                <ul>{history}</ul>\n            </div>\n            <div className=\"bottom-block\">\n                <Button\n                    className=\"button\"\n                    onClick={props.clearHistory}\n                    style={props.style}\n                    icon={faTrashAlt}\n                    title={'Clear history'}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default QuoteHistory\n","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport ButtonsBlock from './buttons-block'\r\nimport TextBox from './text-box'\r\nimport QuoteHistory from './quote-history'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faClone, faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from './button'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nfunction QuoteBox() {\r\n    const [quote, setQuote] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [quoteStatus, setQuoteStatus] = useState(false)\r\n    const [quoteHistory, setQuoteHistory] = useState([])\r\n    const [displayHistory, setDisplayHistory] = useState(false)\r\n    const [mainColor, setMainColor] = useState(MAINCOLOR)\r\n    const [animationName, setAnimationName] = useState('fadein')\r\n\r\n    let styleMainColor = {\r\n        backgroundColor: mainColor,\r\n        transition: 'background-color 1s ease',\r\n    }\r\n\r\n    function loadNewQuote() {\r\n        setAnimationName('fadeout')\r\n        setQuoteStatus(!quoteStatus)\r\n        setMainColor(MAINCOLOR)\r\n    }\r\n\r\n    function copyToClipboard() {\r\n        copy(`\"${quote}\" ${author}`)\r\n    }\r\n\r\n    function clearHistory() {\r\n        setQuoteHistory([])\r\n        toggleDisplayHistory()\r\n    }\r\n\r\n    function toggleDisplayHistory() {\r\n        setDisplayHistory(!displayHistory)\r\n    }\r\n\r\n    function MAINCOLOR() {\r\n        let hue = Math.random() * (360 - 1)\r\n        let color = `hsl(${hue}, 60%, 69%)`\r\n        return color\r\n    }\r\n    useEffect(() => {\r\n        let url = 'https://api.quotable.io/random'\r\n        fetch(url)\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then(\r\n                (result) => {\r\n                    setAnimationName('fadein')\r\n                    setQuote(result.content)\r\n                    setAuthor(result.author)\r\n                    setQuoteHistory((quoteHistory) => [\r\n                        ...quoteHistory,\r\n                        {\r\n                            quote: result.content,\r\n                            author: result.author,\r\n                        },\r\n                    ])\r\n                },\r\n                (error) => {\r\n                    console.log(error.toString())\r\n                }\r\n            )\r\n    }, [quoteStatus])\r\n\r\n    return (\r\n        <div className=\"container\" style={styleMainColor}>\r\n            <div\r\n                id=\"quote-box\"\r\n                className=\"quote-box\"\r\n                style={{\r\n                    display: displayHistory ? 'none' : 'grid',\r\n                }}\r\n            >\r\n                <div className=\"upper-block\">\r\n                    <Button\r\n                        className=\"button-copy\"\r\n                        onClick={copyToClipboard}\r\n                        icon={faClone}\r\n                        style={styleMainColor}\r\n                        title={'Copy'}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"quote-image\"\r\n                    style={{ color: mainColor, transition: '1s ease' }}\r\n                >\r\n                    <FontAwesomeIcon icon={faQuoteLeft} />\r\n                </div>\r\n\r\n                <TextBox\r\n                    quote={quote}\r\n                    author={author}\r\n                    color={mainColor}\r\n                    quoteStatus={quoteStatus}\r\n                    animationName={animationName}\r\n                />\r\n                <ButtonsBlock\r\n                    loadNewQuote={loadNewQuote}\r\n                    quote={quote}\r\n                    author={author}\r\n                    toggleDisplayHistory={toggleDisplayHistory}\r\n                    style={styleMainColor}\r\n                />\r\n            </div>\r\n            <QuoteHistory\r\n                quoteHistory={quoteHistory}\r\n                displayHistory={displayHistory}\r\n                toggleDisplayHistory={toggleDisplayHistory}\r\n                clearHistory={clearHistory}\r\n                style={styleMainColor}\r\n                mainColor={mainColor}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteBox\r\n","import ReactDOM from 'react-dom'\r\nimport QuoteBox from './quote-box'\r\n\r\nfunction App() {\r\n    return <QuoteBox />\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}