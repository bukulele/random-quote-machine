{"version":3,"sources":["quote-box/quote-box.module.css","buttons-block/buttons-block.module.css","button/button.module.css","button/button.js","buttons-block/buttons-block.js","text-box/text-box.js","quote-history/quote-history.js","quote-box/quote-box.js","index.js","quote-history/quote-history.module.css","text-box/text-box.module.css"],"names":["module","exports","Button","style","id","onClick","title","icon","ahref","useState","opacity","setOpacity","styleOpacity","className","styles","button","onMouseEnter","onMouseLeave","ButtonsBlock","quote","author","toggleDisplayHistory","loadNewQuote","url","tweetQuote","href","target","bottomBlock","faTwitter","faHistory","faChevronCircleRight","TextBox","animationName","color","textBlock","text","transition","QuoteHistory","quoteHistory","mainColor","displayHistory","clearHistory","history","map","element","index","display","upperBlock","faTimesCircle","quoteImage","faQuoteLeft","faTrashAlt","QuoteBox","setQuote","setAuthor","quoteStatus","setQuoteStatus","setQuoteHistory","setDisplayHistory","MAINCOLOR","setMainColor","setAnimationName","styleMainColor","backgroundColor","hue","Math","random","useEffect","fetch","then","response","json","result","content","error","console","log","toString","quoteBox","copy","faClone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b551e4d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteBox\":\"quote-box_quoteBox__1sX38\",\"fadein\":\"quote-box_fadein__2s17Y\",\"upperBlock\":\"quote-box_upperBlock__1x36h\",\"quoteImage\":\"quote-box_quoteImage__2c7BD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomBlock\":\"buttons-block_bottomBlock__1-Ldw\",\"tweetQuote\":\"buttons-block_tweetQuote__uH5Iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3FR1J\"};","import { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport styles from './button.module.css'\n\nfunction Button({ style, id, onClick, title, icon, ahref }) {\n    const [opacity, setOpacity] = useState(1)\n\n    function onMouseEnter() {\n        setOpacity(0.75)\n    }\n\n    function onMouseLeave() {\n        setOpacity(1)\n    }\n\n    let styleOpacity = {\n        ...style,\n        opacity: opacity,\n    }\n\n    return (\n        <button\n            id={id}\n            className={styles.button}\n            onClick={onClick}\n            style={styleOpacity}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            title={title}\n        >\n            <FontAwesomeIcon icon={icon} /> {ahref}\n        </button>\n    )\n}\n\nexport default Button\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport {\n    faHistory,\n    faChevronCircleRight,\n} from '@fortawesome/free-solid-svg-icons'\nimport Button from '../button/button'\nimport styles from './buttons-block.module.css'\n\nfunction ButtonsBlock({\n    quote,\n    author,\n    style,\n    toggleDisplayHistory,\n    loadNewQuote,\n}) {\n    let url = `https://twitter.com/intent/tweet?text=\"${quote}\" ${author} %23quotes`\n    let ahref = (\n        <a\n            id=\"tweet-quote\"\n            className={styles.tweetQuote}\n            href={url}\n            target=\"_blank\"\n        ></a>\n    )\n    return (\n        <div className={styles.bottomBlock}>\n            <Button\n                id=\"tweet\"\n                style={style}\n                icon={faTwitter}\n                ahref={ahref}\n                title={'TWEET'}\n            />\n\n            <Button\n                id=\"button-history\"\n                onClick={toggleDisplayHistory}\n                style={style}\n                icon={faHistory}\n                title={'History'}\n            />\n            <Button\n                id=\"new-quote\"\n                onClick={loadNewQuote}\n                style={style}\n                icon={faChevronCircleRight}\n                title={'New quote'}\n            />\n        </div>\n    )\n}\n\nexport default ButtonsBlock\n","import styles from './text-box.module.css'\n\nfunction TextBox({ animationName, color, quote, author }) {\n    return (\n        <div\n            className={styles.textBlock}\n            style={{ animationName: animationName }}\n        >\n            <p\n                id=\"text\"\n                className={styles.text}\n                style={{ color: color, transition: '1s ease' }}\n            >\n                {quote}\n            </p>\n            <p\n                id=\"author\"\n                className={`${styles.author} ${styles.text}`}\n                style={{ color: color, transition: '1s ease' }}\n            >\n                {'- ' + author}\n            </p>\n        </div>\n    )\n}\n\nexport default TextBox\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faTrashAlt,\n    faTimesCircle,\n    faQuoteLeft,\n} from '@fortawesome/free-solid-svg-icons'\nimport Button from '../button/button'\nimport styles from './quote-history.module.css'\n\nfunction QuoteHistory({\n    quoteHistory,\n    mainColor,\n    displayHistory,\n    toggleDisplayHistory,\n    style,\n    clearHistory,\n}) {\n    let history = quoteHistory.map((element, index) => (\n        <li\n            key={element.quote + index}\n            style={{ color: mainColor }}\n        >{`${element.quote} ${element.author}`}</li>\n    ))\n    return (\n        <div\n            className={styles.quoteHistory}\n            style={{ display: displayHistory ? 'grid' : 'none' }}\n        >\n            <div className={styles.upperBlock}>\n                <Button\n                    onClick={toggleDisplayHistory}\n                    style={style}\n                    icon={faTimesCircle}\n                    title={'Close'}\n                />\n            </div>\n            <div className={styles.quoteImage} style={{ color: mainColor }}>\n                <FontAwesomeIcon icon={faQuoteLeft} />\n            </div>\n            <div className={styles.textBlock}>\n                <ul>{history}</ul>\n            </div>\n            <div className={styles.bottomBlock}>\n                <Button\n                    onClick={clearHistory}\n                    style={style}\n                    icon={faTrashAlt}\n                    title={'Clear history'}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default QuoteHistory\n","import React, { useState, useEffect } from 'react'\r\nimport '../index.css'\r\nimport ButtonsBlock from '../buttons-block/buttons-block'\r\nimport TextBox from '../text-box/text-box'\r\nimport QuoteHistory from '../quote-history/quote-history'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faClone, faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from '../button/button'\r\nimport copy from 'copy-to-clipboard'\r\nimport styles from './quote-box.module.css'\r\n\r\nfunction QuoteBox() {\r\n    const [quote, setQuote] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [quoteStatus, setQuoteStatus] = useState(false)\r\n    const [quoteHistory, setQuoteHistory] = useState([])\r\n    const [displayHistory, setDisplayHistory] = useState(false)\r\n    const [mainColor, setMainColor] = useState(MAINCOLOR)\r\n    const [animationName, setAnimationName] = useState('fadein')\r\n\r\n    let styleMainColor = {\r\n        backgroundColor: mainColor,\r\n        transition: 'background-color 1s ease',\r\n    }\r\n\r\n    function loadNewQuote() {\r\n        setAnimationName('fadeout')\r\n        setQuoteStatus(!quoteStatus)\r\n        setMainColor(MAINCOLOR)\r\n    }\r\n\r\n    function copyToClipboard() {\r\n        copy(`\"${quote}\" ${author}`)\r\n    }\r\n\r\n    function clearHistory() {\r\n        setQuoteHistory([])\r\n        toggleDisplayHistory()\r\n    }\r\n\r\n    function toggleDisplayHistory() {\r\n        setDisplayHistory(!displayHistory)\r\n    }\r\n\r\n    function MAINCOLOR() {\r\n        let hue = Math.random() * (360 - 1)\r\n        let color = `hsl(${hue}, 60%, 69%)`\r\n        return color\r\n    }\r\n    useEffect(() => {\r\n        let url = 'https://api.quotable.io/random'\r\n        fetch(url)\r\n            .then((response) => {\r\n                return response.json()\r\n            })\r\n            .then(\r\n                (result) => {\r\n                    setAnimationName('fadein')\r\n                    setQuote(result.content)\r\n                    setAuthor(result.author)\r\n                    setQuoteHistory((quoteHistory) => [\r\n                        ...quoteHistory,\r\n                        {\r\n                            quote: result.content,\r\n                            author: result.author,\r\n                        },\r\n                    ])\r\n                },\r\n                (error) => {\r\n                    console.log(error.toString())\r\n                }\r\n            )\r\n    }, [quoteStatus])\r\n\r\n    return (\r\n        <div className=\"container\" style={styleMainColor}>\r\n            <div\r\n                id=\"quote-box\"\r\n                className={styles.quoteBox}\r\n                style={{\r\n                    display: displayHistory ? 'none' : 'grid',\r\n                }}\r\n            >\r\n                <div className={styles.upperBlock}>\r\n                    <Button\r\n                        onClick={copyToClipboard}\r\n                        icon={faClone}\r\n                        style={styleMainColor}\r\n                        title={'Copy'}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className={styles.quoteImage}\r\n                    style={{ color: mainColor, transition: '1s ease' }}\r\n                >\r\n                    <FontAwesomeIcon icon={faQuoteLeft} />\r\n                </div>\r\n\r\n                <TextBox\r\n                    quote={quote}\r\n                    author={author}\r\n                    color={mainColor}\r\n                    quoteStatus={quoteStatus}\r\n                    animationName={animationName}\r\n                />\r\n                <ButtonsBlock\r\n                    loadNewQuote={loadNewQuote}\r\n                    quote={quote}\r\n                    author={author}\r\n                    toggleDisplayHistory={toggleDisplayHistory}\r\n                    style={styleMainColor}\r\n                />\r\n            </div>\r\n            <QuoteHistory\r\n                quoteHistory={quoteHistory}\r\n                displayHistory={displayHistory}\r\n                toggleDisplayHistory={toggleDisplayHistory}\r\n                clearHistory={clearHistory}\r\n                style={styleMainColor}\r\n                mainColor={mainColor}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteBox\r\n","import ReactDOM from 'react-dom'\r\nimport QuoteBox from './quote-box/quote-box'\r\n\r\nfunction App() {\r\n    return <QuoteBox />\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteHistory\":\"quote-history_quoteHistory__31nK7\",\"fadein\":\"quote-history_fadein__MHXoP\",\"upperBlock\":\"quote-history_upperBlock__1Gzgm\",\"quoteImage\":\"quote-history_quoteImage__1Txsl\",\"textBlock\":\"quote-history_textBlock__btSX2\",\"bottomBlock\":\"quote-history_bottomBlock__2D2LO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBlock\":\"text-box_textBlock__3MTC1\",\"author\":\"text-box_author__3SLl8\",\"text\":\"text-box_text__1d6Jm\"};"],"sourceRoot":""}